{"version":3,"sources":["logo.png","ArtGallery/BackgroundMusic/music.mp3","serviceWorker.js","ArtGallery/Search/Search.js","ArtGallery/Nav/Nav.js","Firebase/firebase.js","ArtGallery/CardItem/CardItem.js","baseURL.js","ArtGallery/Gallery/Gallery.js","ArtGallery/FloatingArrow/FloatingArrow.js","ArtGallery/ZoomCardItem/ZoomCardItem.js","ArtGallery/ArtGallery.js","ArtGallery/BackgroundMusic/index.js","App/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Search","props","useState","search","setSearch","useEffect","charAt","toUpperCase","slice","id","className","onSubmit","e","preventDefault","handleSearch","onChange","event","searchText","target","value","substr","toLowerCase","placeholder","onClick","Nav","recieveSearchText","useCallback","propsChild","handleNavSearch","alt","src","require","href","class","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","err","test","message","database","auth","GoogleAuthProvider","Card","currentCard","title","url","created_at","CardItem","card","handleClickedCard","baseURL","Gallery","cardItemsData","setCardItemsData","isLoading","setIsLoading","setClickedCard","recieveCardDetails","handleGalleryClickedCard","intervalId","setInterval","a","fetch","response","json","status","console","log","clearInterval","error","axios","get","data","fetchImages","cardItemsList","list","values","Object","filter","i","titleFlag","indexOf","tagsFlag","tags","tag","filterCards","map","key","toString","createCardItemsList","length","FloatingArrow","ZoomCardItem","recieveTagText","childProps","handleTagSearch","tagsList","Tag","currentTag","createTagsList","ZoomImage","description","zoomIn","zoomOut","resetTransform","Fragment","ArtGallery","lock","setLock","setCard","wide","setWide","windowWidth","recieveNavSearchText","recieveTagSearchText","cardId","recieveCardFromServer","headers","btoa","cardData","context","custom","Date","toLocaleString","undefined","BackgroundMusic","Audio","audio","modalVisible","setModalVisible","play","loop","catch","App","getWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","width","height","innerWidth","innerHeight","rootElement","document","getElementById","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uMAAAA,EAAOC,QAAU,IAA0B,kC,iJCA3CD,EAAOC,QAAU,IAA0B,mC,4ECYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mECfOC,G,YAAS,SAACC,GAAW,IAAD,EACHC,mBAASD,EAAME,QADZ,mBACxBA,EADwB,KAChBC,EADgB,KAG/BC,qBACE,WACED,EAAUH,EAAME,OAAOG,OAAO,GAAGC,cAAgBN,EAAME,OAAOK,MAAM,MAEtE,CAACP,EAAME,SA+BT,OACE,yBAAKM,GAAG,kBAAkBC,UAAU,oBAClC,uBAAGD,GAAG,aAAaC,UAAU,6BAC7B,0BAAMC,SARmB,SAACC,GAC5BA,EAAEC,iBACFZ,EAAMa,aAAaX,KAOf,2BACEM,GAAG,cACHC,UAAU,eACVK,SA9BR,SAAsBC,GAEpB,IAAIC,EAAaD,EAAME,OAAOC,MAAMC,OAAO,EAAG,IAAIC,cAClDjB,EAAUa,GAGVhB,EAAMa,aAAaG,IAyBbK,YAAY,SACZH,MAAOhB,KAIX,uBACEO,UACEP,EACI,gCACA,gCAENoB,QAjCN,WAGEnB,EADiB,IAIjBH,EAAMa,aAJW,UCzBRU,EAAM,SAACvB,GAAW,IAAD,EAEAC,mBAASD,EAAME,QAFf,mBAEbC,GAFa,WAKtBqB,EAAoBC,uBACxB,SAACC,GAECvB,EAAUH,GAIVA,EAAM2B,gBAAgBD,KAExB,IAGF,OACE,yBAAKlB,GAAG,eAAeC,UAAU,iBAC/B,yBAAKD,GAAG,gBAAgBC,UAAU,kBAChC,yBAAKD,GAAG,YAAYC,UAAU,aAAamB,IAAI,OAAOC,IAAKC,EAAQ,OAErE,kBAAC,EAAD,CAAQ5B,OAAQF,EAAME,OAAQW,aAAcW,IAC5C,yBAAKhB,GAAG,iBAAiBC,UAAU,mBACjC,yBAAKD,GAAG,oBAAoBC,UAAU,kBACpC,uBAAGsB,KAAK,wCAAwCd,OAAO,UACrD,uBAAGT,GAAG,OAAOC,UAAU,+BAG3B,yBAAKD,GAAG,uBAAuBC,UAAU,kBACvC,uBAAGsB,KAAK,sCAAsCd,OAAO,UAEnD,uBAAGe,MAAM,2C,yBCdrB,IACEC,IAASC,cArBU,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAcf,MAAOC,GAGF,iBAAiBC,KAAKD,EAAIE,SAKlBZ,IAASa,WACA,IAAIb,IAASc,KAAKC,mBACtBf,IAASc,OACdd,EAAf,E,MC5BA,SAASgB,EAAKjD,GACZ,IAAMkD,EAAclD,EAAMkD,YAE1B,OACE,yBAAK1C,GAAG,gBAAgBC,UAAU,8BAChC,yBAAKA,UAAU,wBACb,yBACED,GAAG,YACHC,UAAU,aACVmB,IAAKsB,EAAYC,MACjBtB,IAAKqB,EAAYE,OAGrB,yBAAK3C,UAAU,WACb,yBAAKD,GAAG,qBAAqBC,UAAU,8BACrC,uBAAGD,GAAG,aAAa0C,EAAYC,OAC/B,8BAEF,yBAAK3C,GAAG,oBAAoBC,UAAU,6BACpC,uBAAGD,GAAG,YAAY0C,EAAYG,eAOjC,IAAMC,EAAW,SAACtD,GASvB,OACE,wBAAIsB,QATN,SAAkCX,GAChCA,EAAEC,iBAEF,IAAI2C,EAAOvD,EAAMkD,YAEjBlD,EAAMwD,kBAAkBD,KAKtB,kBAACN,EAAD,CAAMC,YAAalD,EAAMkD,gBC3ClBO,EAAU,4CCMVC,EAAU,SAAA1D,GAAS,MAEYC,mBAAS,IAFrB,mBAEvB0D,EAFuB,KAERC,EAFQ,OAGI3D,oBAAS,GAHb,mBAGvB4D,EAHuB,KAGZC,EAHY,OAIQ7D,mBAAS,IAJjB,mBAIV8D,GAJU,WAMxBC,EAAqBvC,uBACzB,SAAAC,GACE,IAAI6B,EAAO7B,EAEXqC,EAAeR,GACfvD,EAAMiE,yBAAyBV,KAEjC,IAIJnD,qBAAU,WACR,IAeM8D,EAAaC,YAfI,uCAAG,4BAAAC,EAAA,+EAECC,MAAMZ,EAAQ,WAFf,cAEhBa,EAFgB,gBAGHA,EAASC,OAHN,OAIF,UAJE,OAIbC,SACPC,QAAQC,IAAI,cACZC,cAAcT,GACdJ,GAAa,IAPO,kDAUtBW,QAAQG,MAAM,gCAAd,MAVsB,0DAAH,qDAe2B,KAGlD,OAAO,kBAAMD,cAAcT,MAC1B,IAGD9D,qBAAU,YACS,uCAAG,4BAAAgE,EAAA,+EAEOS,IAAMC,IAAIrB,EAAQ,WAFzB,OAEVa,EAFU,OAGhBR,GAAa,GACbF,EAAiBU,EAASS,MAC1BN,QAAQC,IAAIJ,GALI,gDAOhBG,QAAQG,MAAM,yBAAd,MAPgB,yDAAH,qDAWjBI,KACC,CAACnB,IAEJ,IAAIoB,EA4BN,SAA6B/E,EAAQyD,EAAeK,GAClD,IACIkB,EADAC,EAASC,OAAOD,OAAOxB,GAIzBuB,EADEhF,EAoBN,SAAqBiF,EAAQjF,GAmB3B,OAlBeiF,EAAOE,QAAO,SAAAC,GAE3B,IAAIC,GAAuD,IAA3CD,EAAEnC,MAAM/B,cAAcoE,QAAQtF,GAG1CuF,GAAW,EAUf,OATKF,GAAaD,EAAEI,MAClBJ,EAAEI,KAAKL,QAAO,SAAAM,GACPF,IACHA,GAAkD,IAAvCE,EAAIvE,cAAcoE,QAAQtF,OAMpCqF,GAAaE,KAnCbG,CAAYT,EAAQjF,GAEpBiF,EAWT,OARoBD,EAAKW,KAAI,SAAAP,GAAC,OAC5B,kBAAC,EAAD,CACEpC,YAAaoC,EACbQ,IAAKR,EAAE9E,GAAGuF,WACVvC,kBAAmBQ,OA1CHgC,CAClBhG,EAAME,OACNyD,EACAK,GAGF,OACE,yBAAKxD,GAAG,mBAAmBC,UAAU,qBACnC,wBAAID,GAAG,UAAUC,UAAU,cAGzBoD,EACE,0BAAM7B,MAAM,WACZiD,GAGJ,uBAAGzE,GAAG,eAAeC,UAAU,iBAC5BwE,EAAcgB,OADjB,kB,UC3EOC,EAAgB,WAC3B,OACE,uBAAGnE,KAAK,KACN,yBAAKtB,UAAU,mBACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,yBACb,uBAAGA,UAAU,0C,wBCJV0F,EAAe,SAACnG,GAC3B,IAAMuD,EAAOvD,EAAMuD,KAEnBkB,QAAQC,IAAInB,GAHyB,MAKTtD,mBAAS,IALA,mBAKtBE,GALsB,WAQ/BiG,EAAiB3E,uBACrB,SAAC4E,GAEClG,EAAUkG,GAIVrG,EAAMsG,gBAAgBD,KAExB,IAGIE,EA0BR,SAAwBb,EAAMU,GAI5B,OAHeV,EAAKG,KAAI,SAACP,GAAD,OACtB,kBAACkB,EAAD,CAAKC,WAAYnB,EAAGQ,IAAKR,EAAGgB,gBAAiBF,OA5B9BM,CAAenD,EAAKmC,KAAMU,GAE3C,OACI,yBAAK3F,UAAU,kBACb,kBAACkG,EAAD,CAAWpD,KAAMA,IACjB,yBAAK/C,GAAG,mBAAmBC,UAAU,qBACnC,uBAAGD,GAAG,QAAQC,UAAU,SACrB8C,EAAKJ,OAER,6BACA,uBAAG3C,GAAG,eAAe+C,EAAKqD,aAC1B,uBAAGpG,GAAG,OAAOC,UAAU,QAAvB,UACK8C,EAAKF,YAEV,4BAAKkD,MAmBf,SAASC,EAAIxG,GAAQ,IAAD,EACUC,mBAAS,IADnB,mBACHE,GADG,aAEIF,mBAASD,EAAMyG,WAAWV,YAF9B,mBAEXJ,EAFW,UAclB,OACE,wBAAIlF,UAAU,MAAMa,QAXtB,SAAsBP,GACpBA,EAAMH,iBAGNT,EAAUwF,GAGV3F,EAAMsG,gBAAgBX,KAItB,IACIA,GAKR,SAASgB,EAAU3G,GACjB,IAAIuD,EAAOvD,EAAMuD,KACjB,OACE,yBAAK/C,GAAG,iBAAiBC,UAAU,mBACjC,kBAAC,IAAD,MACG,gBAAGoG,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,eAApB,4DACC,kBAAC,IAAMC,SAAP,KACE,yBAAKvG,UAAU,iBACb,kBAAC,IAAD,KACE,yBACED,GAAG,QACHC,UAAU,QACVoB,IAAK0B,EAAKH,IACVxB,IAAK2B,EAAKJ,UAIhB,yBAAK1C,UAAU,SACb,4BAAQA,UAAU,cAAca,QAASuF,GACvC,uBAAGpG,UAAU,qCAEf,4BAAQA,UAAU,eAAea,QAASwF,GACxC,uBAAGrG,UAAU,uCAEf,4BAAQA,UAAU,iBAAiBa,QAASyF,GAC1C,uBAAGtG,UAAU,yC,UC5FhBwG,EAAa,SAACjH,GAAW,IAAD,EACXC,oBAAS,GADE,mBAC5BiH,EAD4B,KACtBC,EADsB,OAEPlH,mBAAS,IAFF,mBAE5BC,EAF4B,KAEpBC,EAFoB,OAGXF,mBAAS,IAHE,mBAG5BsD,EAH4B,KAGtB6D,EAHsB,OAIXnH,oBAAS,GAJE,mBAI5BoH,EAJ4B,KAItBC,EAJsB,KAMnClH,qBAAU,WACJJ,EAAMuH,YAAc,KACtB9C,QAAQC,IAAI,UACZ4C,GAAQ,IAERA,GAAQ,KAET,CAACtH,EAAMuH,cAEV,IAAMC,EAAuB/F,uBAAY,SAACzB,GAExCG,EAAUH,KACT,IAEGyH,EAAuBhG,uBAAY,SAACzB,GAExCmH,GAAQ,GACRhH,EAAUH,EAAMoB,iBACf,IAEG4C,EAAqBvC,uBAAY,SAACC,GACtC,IAAIgG,EAAShG,EAAWlB,GACxBiE,QAAQC,IAAI,0BAA2BgD,GA5BN,oCA8BjCC,CAAsBD,KACrB,IA/BgC,4CAkDnC,WAAqCA,GAArC,qBAAAtD,EAAA,6DACEK,QAAQC,IAAIgD,GADd,kBAI2B7C,IAAMC,IAAN,UAAarB,EAAb,mBAA+BiE,GAAU,CAC9DE,QAAS,CACP,cAAgB,SAAhB,OAA0BC,KAAK,mCANvC,OAIUvD,EAJV,OAWUwD,EAAW,CACftH,GAAI8D,EAASS,KAAKvE,GAClB4C,IAAKkB,EAASS,KAAK3B,IACnBD,MAAOmB,EAASS,KAAK5B,OAAS,WAC9ByD,YAAatC,EAASS,KAAK6B,aAAe,iBAC1ClB,MAAM,UAAApB,EAASS,KAAKgD,eAAd,mBAAuBC,cAAvB,eAA+BtC,OAAQ,GAC7CrC,WAAY,IAAI4E,KAAK3D,EAASS,KAAK1B,YAAY6E,kBAIjDd,EAAQU,GAERrD,QAAQC,IAAInB,GACZ4D,GAAQ,GAxBZ,kDA0BI1C,QAAQG,MAAM,+CAAd,MA1BJ,2DAlDmC,sBAkFnC,OACE,yBAAKpE,GAAG,aAAaC,UAAU,oBAC7B,yBACEA,UACEyG,EACIG,EACE,sCACA,gDACF,IAGN,kBAAC,EAAD,CAAKnH,OAAQA,EAAQyB,gBAAiB6F,IACtC,kBAAC,EAAD,CACEtH,OAAQA,EACR+D,yBAA0BD,IAE3BqD,GAAQH,GAAQ,kBAAC,IAAD,YAGTiB,IAAT5E,GAAsC,IAAhBA,EAAK0C,QAAiBiB,EAG3C,yBAAKzG,UAAW4G,EAAO,iBAAmB,oBACxC,uBACE5G,UAAU,yBACVa,QAAS,kBAAM6F,GAAQ,MAEzB,kBAAC,EAAD,CAAc5D,KAAMA,EAAM+C,gBAAiBmB,KAP7C,kBAAC,EAAD,QC5EOW,G,MAnCS,WAAO,IAAD,EACZnI,mBAAS,IAAIoI,MAAMvG,EAAQ,MAApCwG,EADqB,sBAEYrI,oBAAS,GAFrB,mBAErBsI,EAFqB,KAEPC,EAFO,KAmB5B,OALApI,qBAAU,cAGP,CAACkI,IAGF,6BACGC,GACC,yBAAK9H,UAAU,SACb,yBAAKA,UAAU,iBACb,sDACA,4BAAQa,QArBM,WAEtBmD,QAAQC,IAAI4D,EAAMG,QAClBH,EAAMI,MAAO,EACbJ,EAAMG,OAAOE,OAAM,SAAA/D,GACjBH,QAAQG,MAAM,uBAAwBA,MAExC4D,GAAgB,KAcR,WCvBG,SAASI,IAAO,IAAD,EAmBvB,WAAgC,IAAD,EACY3I,mBAC9C4I,KAFkC,mBAC7BC,EAD6B,KACXC,EADW,KAcpC,OATA3I,qBAAU,WACR,SAAS4I,IACPD,EAAoBF,KAItB,OADAlJ,OAAOsJ,iBAAiB,SAAUD,GAC3B,kBAAMrJ,OAAOuJ,oBAAoB,SAAUF,MACjD,IAEIF,EAhCmBK,GAAVC,GADY,EACpBC,OADoB,EACZD,OAEhB,OACE,yBAAK3I,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAY8G,YAAa6B,KAK/B,SAASP,IAAuB,IAAD,EACsBlJ,OACnD,MAAO,CACLyJ,MAH2B,EACrBE,WAGND,OAJ2B,EACFE,aCX7B,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACjB,EAAD,OAEFY,GZwHI,kBAAmBM,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdxB,OAAM,SAAA/D,GACLH,QAAQG,MAAMA,EAAM/B,c","file":"static/js/main.458d6433.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0fa74170.png\";","module.exports = __webpack_public_path__ + \"static/media/music.b1933435.mp3\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./search.css\";\r\n\r\nexport const Search = (props) => {\r\n  const [search, setSearch] = useState(props.search);\r\n\r\n  useEffect(\r\n    () => {\r\n      setSearch(props.search.charAt(0).toUpperCase() + props.search.slice(1));\r\n    },\r\n    [props.search] // Occurs when the state within is changing\r\n  );\r\n\r\n  /**\r\n   * When occrs event 'onChange' in the search input,\r\n   * update the parent props {handleSearch} with the search text.\r\n   * @param {onChange} event\r\n   */\r\n  function updateSearch(event) {\r\n    // Get the search text when occurs event 'onChange'\r\n    let searchText = event.target.value.substr(0, 30).toLowerCase();\r\n    setSearch(searchText);\r\n\r\n    // Update the parent's props {handleSearch} with the search text\r\n    props.handleSearch(searchText);\r\n  }\r\n\r\n  function deleteSearch() {\r\n    // Get the search text when occurs event 'delete search'\r\n    let searchText = \"\";\r\n    setSearch(searchText);\r\n\r\n    // Update the parent's props {handleSearch} with the search text\r\n    props.handleSearch(searchText);\r\n  }\r\n\r\n  const updateSearchOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleSearch(search);\r\n  };\r\n\r\n  return (\r\n    <div id=\"searchContainer\" className=\"search-container\">\r\n      <i id=\"searchIcon\" className=\"fa fa-search search-icon\" />\r\n      <form onSubmit={updateSearchOnSubmit}>\r\n        <input\r\n          id=\"searchInput\"\r\n          className=\"search-input\"\r\n          onChange={updateSearch}\r\n          placeholder=\"Search\"\r\n          value={search}\r\n        />\r\n      </form>\r\n\r\n      <i\r\n        className={\r\n          search\r\n            ? \"fas fa-times delete-icon show\"\r\n            : \"fas fa-times delete-icon hide\"\r\n        }\r\n        onClick={deleteSearch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport \"./nav.css\";\r\nimport { Search } from \"../Search/Search\";\r\n\r\nexport const Nav = (props) => {\r\n\r\n  const [search, setSearch] = useState(props.search);\r\n\r\n  // Recieve search data from Search component, init search state\r\n  const recieveSearchText = useCallback(\r\n    (propsChild) => {\r\n      // Update searched text in the state\r\n      setSearch(props);\r\n\r\n      // Update the parent's props {handleNavSearch} with the search text\r\n      // (ArtGallery component - Search grandparent component)\r\n      props.handleNavSearch(propsChild);\r\n    },\r\n    [] \r\n  );\r\n\r\n  return (\r\n    <div id=\"navContainer\" className=\"nav-container\">\r\n      <div id=\"logoContainer\" className=\"logo-container\">\r\n        <img id=\"logoImage\" className=\"logo-image\" alt=\"logo\" src={require('../../logo.png')} />\r\n      </div>\r\n      <Search search={props.search} handleSearch={recieveSearchText} />\r\n      <div id=\"iconsContainer\" className=\"icons-container\">\r\n        <div id=\"homeIconContainer\" className=\"icon-container\">\r\n          <a href=\"https://www.facebook.com/zozorender3d\" target=\"_blank\">\r\n            <i id=\"home\" className=\"fa fa-home icon bar-icon\" />\r\n          </a>\r\n        </div>\r\n        <div id=\"contactIconContainer\" className=\"icon-container\">\r\n          <a href=\"https://audition-plth.onrender.com/\" target=\"_blank\">\r\n            {/* <i id=\"contact\" className=\"fa fa-envelope icon bar-icon\" /> */}\r\n            <i class=\"fa-solid fa-gamepad icon bar-icon\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBbkn86NAs0iCCE6i3dMjxctS-r93_d50s\",\r\n  authDomain: \"artgallery-4c02e.firebaseapp.com\",\r\n  databaseURL: \"https://artgallery-4c02e.firebaseio.com\",\r\n  projectId: \"artgallery-4c02e\",\r\n  storageBucket: \"artgallery-4c02e.appspot.com\",\r\n  messagingSenderId: \"955387804026\",\r\n  appId: \"1:955387804026:web:d9fa5f3954d08b61983ec3\",\r\n  measurementId: \"G-E986Y4Q017\",\r\n\r\n  // apiKey: \"AIzaSyCZg8McvBs6f0sITpTygsprG6BCuveHlHI\",\r\n  // authDomain: \"photo-gallery-98c05.firebaseapp.com\",\r\n  // databaseURL: \"https://photo-gallery-98c05.firebaseio.com\",\r\n  // projectId: \"photo-gallery-98c05\",\r\n  // storageBucket: \"photo-gallery-98c05.firebasestorage.app\",\r\n  // messagingSenderId: \"1064258223496\",\r\n  // appId: \"1:1064258223496:web:a0f3379a92647c02740e3d\",\r\n  // measurementId: \"G-RRPECNDPFJ\"\r\n};\r\n// Initialize Firebase\r\ntry {\r\n  firebase.initializeApp(firebaseConfig);\r\n} catch (err) {\r\n  // we skip the \"already exists\" message which is\r\n  // not an actual error when we're hot-reloading\r\n  if (!/already exists/.test(err.message)) {\r\n    //console.error(\"Firebase initialization error\", err.stack);\r\n  }\r\n}\r\n// Get a reference to the database service\r\nvar database = firebase.database();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport \"./card-item.css\";\r\n\r\n/**\r\n * Card component\r\n * @param {Card currentCard} props\r\n */\r\nfunction Card(props) {\r\n  const currentCard = props.currentCard;\r\n\r\n  return (\r\n    <div id=\"cardContainer\" className=\"card-container card-border\">\r\n      <div className=\"card-image-container\">\r\n        <img\r\n          id=\"cardImage\"\r\n          className=\"card-image\"\r\n          alt={currentCard.title}\r\n          src={currentCard.url}\r\n        />\r\n      </div>\r\n      <div className=\"overlay\">\r\n        <div id=\"cardTitleContainer\" className=\"items card-title-container\">\r\n          <p id=\"cardTitle\">{currentCard.title}</p>\r\n          <hr />\r\n        </div>\r\n        <div id=\"cardDateContainer\" className=\"items card-date-container\">\r\n          <p id=\"cardDate\">{currentCard.created_at}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const CardItem = (props) => {\r\n  function updateCardDetailsOnClick(e) {\r\n    e.preventDefault();\r\n\r\n    let card = props.currentCard;\r\n\r\n    props.handleClickedCard(card);\r\n  }\r\n\r\n  return (\r\n    <li onClick={updateCardDetailsOnClick}>\r\n      <Card currentCard={props.currentCard} />\r\n    </li>\r\n  );\r\n};\r\n","// export const baseURL = 'http://localhost:5000'\r\nexport const baseURL = 'https://server-gallery-react.onrender.com'","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./gallery.css\";\r\nimport firebase from \"../../Firebase/firebase\"\r\nimport { CardItem } from \"../CardItem/CardItem\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../../baseURL\";\r\n\r\nexport const Gallery = props => {\r\n  // State using for extractig cards data from DB\r\n  const [cardItemsData, setCardItemsData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [clickedCard, setClickedCard] = useState([]);\r\n\r\n  const recieveCardDetails = useCallback(\r\n    propsChild => {\r\n      let card = propsChild;\r\n\r\n      setClickedCard(card);\r\n      props.handleGalleryClickedCard(card);\r\n    },\r\n    [] \r\n  );\r\n\r\n// Kiểm tra trạng thái server mỗi 2 giây, dừng khi server đã sẵn sàng\r\nuseEffect(() => {\r\n  const checkServerStatus = async () => {\r\n    try {\r\n      const response = await fetch(baseURL+'/status'); // API kiểm tra server\r\n      const data = await response.json();\r\n      if (data.status === 'ready') {\r\n        console.log('thanh cong')\r\n        clearInterval(intervalId);\r\n        setIsLoading(false)\r\n      } \r\n    } catch (error) {\r\n      console.error('Error checking server status:', error);\r\n    }\r\n  };\r\n\r\n  // Gọi kiểm tra trạng thái server mỗi 2 giây\r\n  const intervalId = setInterval(checkServerStatus, 2000);\r\n\r\n  // Dọn dẹp khi server đã sẵn sàng hoặc khi component unmount\r\n  return () => clearInterval(intervalId);\r\n}, []); // `[]` để useEffect chỉ chạy khi component mount\r\n\r\n  // Gọi API để lấy danh sách hình ảnh\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await axios.get(baseURL+'/images');\r\n        setIsLoading(false)\r\n        setCardItemsData(response.data); // Lưu danh sách hình ảnh vào state\r\n        console.log(response)\r\n      } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, [isLoading]); // Chỉ gọi API 1 lần khi component được mount\r\n\r\n  let cardItemsList = createCardItemsList(\r\n    props.search,\r\n    cardItemsData,\r\n    recieveCardDetails\r\n  );\r\n\r\n  return (\r\n    <div id=\"galleryContainer\" className=\"gallery-container\">\r\n      <ul id=\"gallery\" className=\"gallery\r\n      \">\r\n        {\r\n        isLoading\r\n        ? <span class=\"loader\"></span>  // Hiển thị trạng thái loading khi isLoading là true\r\n        : cardItemsList         // Hiển thị danh sách ảnh khi đã tải xong\r\n      }\r\n      </ul>\r\n      <p id=\"cardsCounter\" className=\"cards-counter\">\r\n        {cardItemsList.length} items found\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Extract JSON recieved from DB {cardItemsData}\r\n * init new {CardItem} component for each JSON object, as props\r\n * @param {State} cardItemsData\r\n */\r\nfunction createCardItemsList(search, cardItemsData, recieveCardDetails) {\r\n  let values = Object.values(cardItemsData);\r\n  let list;\r\n\r\n  if (search) {\r\n    list = filterCards(values, search);\r\n  } else {\r\n    list = values;\r\n  }\r\n\r\n  let cardItemsList = list.map(i => (\r\n    <CardItem\r\n      currentCard={i}\r\n      key={i.id.toString()}\r\n      handleClickedCard={recieveCardDetails}\r\n    />\r\n  ));\r\n\r\n  return cardItemsList;\r\n}\r\n\r\n/**\r\n * Filter the cards according to the search text\r\n */\r\nfunction filterCards(values, search) {\r\n  let filtered = values.filter(i => {\r\n    // Filter card by the title\r\n    let titleFlag = i.title.toLowerCase().indexOf(search) !== -1;\r\n\r\n    // Filter card by the tags, if not filtered by the title\r\n    let tagsFlag = false;\r\n    if (!titleFlag && i.tags) {\r\n      i.tags.filter(tag => {\r\n        if (!tagsFlag) {\r\n          tagsFlag = tag.toLowerCase().indexOf(search) !== -1;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Return if the card chosen by the filtering\r\n    return titleFlag || tagsFlag;\r\n  });\r\n\r\n  return filtered;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport \"./floating-arrow.css\";\r\n\r\nexport const FloatingArrow = () => {\r\n  return (\r\n    <a href=\"#\">\r\n      <div className=\"arrow-container\">\r\n        <div className=\"round\">\r\n          <i className=\"fa fa-angle-up arrow\" />\r\n          <i className=\"fa fa-angle-up arrow bottom-arrow\" />\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./zoom-card-item.css\";\r\nimport firebase from \"../../Firebase/firebase\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\n\r\nexport const ZoomCardItem = (props) => {\r\n  const card = props.card;\r\n\r\n  console.log(card)\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Recieve search data from Search component, init search state\r\n  const recieveTagText = useCallback(\r\n    (childProps) => {\r\n      // Update searched text in the state\r\n      setSearch(childProps);\r\n\r\n      // Update the parent's props {handleNavSearch} with the search text\r\n      // (ArtGallery component - Search grandparent component)\r\n      props.handleTagSearch(childProps);\r\n    },\r\n    [] //search\r\n  );\r\n\r\n  const tagsList = createTagsList(card.tags, recieveTagText);\r\n\r\n  return (\r\n      <div className=\"zoom-container\">\r\n        <ZoomImage card={card} />\r\n        <div id=\"detailsContainer\" className=\"details-container\">\r\n          <p id=\"title\" className=\"title\">\r\n            {card.title}\r\n          </p>\r\n          <hr />\r\n          <p id=\"description\">{card.description}</p>\r\n          <p id=\"date\" className=\"date\">\r\n            – {card.created_at}\r\n          </p>\r\n          <ul>{tagsList}</ul>\r\n          \r\n          {/* <div className=\"likes-container\">\r\n            <Like card={card} />\r\n            <Dislike card={card} />\r\n          </div> */}\r\n          \r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nfunction createTagsList(tags, recieveTagText) {\r\n  let tagsList = tags.map((i) => (\r\n    <Tag currentTag={i} key={i} handleTagSearch={recieveTagText} />\r\n  ));\r\n  return tagsList;\r\n}\r\n\r\nfunction Tag(props) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [tag, setTag] = useState(props.currentTag.toString());\r\n\r\n  function updateSearch(event) {\r\n    event.preventDefault();\r\n\r\n    // Get the search text when occurs event 'onChange'\r\n    setSearch(tag);\r\n\r\n    // Update the parent's props {handleSearch} with the search text\r\n    props.handleTagSearch(tag);\r\n  }\r\n\r\n  return (\r\n    <li className=\"tag\" onClick={updateSearch}>\r\n      #{tag}\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction ZoomImage(props) {\r\n  let card = props.card;\r\n  return (\r\n    <div id=\"imageContainer\" className=\"image-container\">\r\n      <TransformWrapper>\r\n        {({ zoomIn, zoomOut, resetTransform, ...rest }) => (\r\n          <React.Fragment>\r\n            <div className=\"image-wrapper\">\r\n              <TransformComponent>\r\n                <img\r\n                  id=\"image\"\r\n                  className=\"image\"\r\n                  src={card.url}\r\n                  alt={card.title}\r\n                />\r\n              </TransformComponent>\r\n            </div>\r\n            <div className=\"tools\">\r\n              <button className=\"zoom-in-btn\" onClick={zoomIn}>\r\n                <i className=\"fas fa-search-plus zoom-in-icon\" />\r\n              </button>\r\n              <button className=\"zoom-out-btn\" onClick={zoomOut}>\r\n                <i className=\"fas fa-search-minus zoom-out-icon\" />\r\n              </button>\r\n              <button className=\"zoom-reset-btn\" onClick={resetTransform}>\r\n                <i className=\"fas fa-expand zoom-reset-icon\" />\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </TransformWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Like(props) {\r\n  let card = props.card;\r\n\r\n  const [likeClassName, setLikeClassName] = useState(false);\r\n  const [likeCounter, setLikeCounter] = useState(function () {\r\n    return parseInt(props.card.likes, 10);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLikeCounter(parseInt(props.card.likes, 10));\r\n  }, [props.card.likes]);\r\n\r\n  useEffect(() => {\r\n    setLikeCounter(parseInt(props.card.likes, 10));\r\n  }, [props]);\r\n\r\n  function updateLikeDB() {\r\n    // var updates = {};\r\n    // updates[\"/Cards/\" + card.id + \"/likes\"] = likeCounter + 1;\r\n    // firebase\r\n    //   .database()\r\n    //   .ref()\r\n    //   .update(updates, function (error) {\r\n    //     if (error) {\r\n    //       return false;\r\n    //     } else {\r\n    //       // Data saved successfully, update the view of the likes counter\r\n    //       setLikeClassName(!likeClassName);\r\n    //       setLikeCounter(likeCounter + 1);\r\n    //       return true;\r\n    //     }\r\n    //   });\r\n    console.log('like')\r\n  }\r\n\r\n  return (\r\n    <div className=\"like-container\">\r\n      <i\r\n        className={\r\n          likeClassName\r\n            ? \"fa fa-heart like-icon like-icon-anim\"\r\n            : \"fa fa-heart like-icon \"\r\n        }\r\n        onClick={updateLikeDB}\r\n        onAnimationEnd={() => setLikeClassName(!likeClassName)}\r\n      />\r\n      <p id=\"likes\">{likeCounter}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Dislike(props) {\r\n  let card = props.card;\r\n\r\n  const [dislikeClassName, setDislikeClassName] = useState(false);\r\n  const [dislikeCounter, setDislikeCounter] = useState(function () {\r\n    return parseInt(props.card.likes, 10);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDislikeCounter(parseInt(props.card.dislikes, 10));\r\n  }, [props.card.dislikes]);\r\n\r\n  useEffect(() => {\r\n    setDislikeCounter(parseInt(props.card.dislikes, 10));\r\n  }, [props]);\r\n\r\n  function updateDislikeDB() {\r\n    var updates = {};\r\n    updates[\"/Cards/\" + card.id + \"/dislikes\"] = dislikeCounter + 1;\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .update(updates, function (error) {\r\n        if (error) {\r\n          return false;\r\n        } else {\r\n          // Data saved successfully, update the view of the dislikes counter\r\n          setDislikeClassName(!dislikeClassName);\r\n          setDislikeCounter(dislikeCounter + 1);\r\n          return true;\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"dislike-container\">\r\n      <i\r\n        className={\r\n          dislikeClassName\r\n            ? \"fas fa-heart-broken dislike-icon dislike-icon-anim\"\r\n            : \"fas fa-heart-broken dislike-icon\"\r\n        }\r\n        onClick={updateDislikeDB}\r\n        onAnimationEnd={() => setDislikeClassName(!dislikeClassName)}\r\n      />\r\n      <p id=\"dislikes\" className=\"dislikes\">\r\n        {dislikeCounter}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ScrollLock from \"react-scrolllock\";\r\nimport axios from \"axios\"; // Import axios để gọi API từ server\r\n\r\nimport { Nav } from \"./Nav/Nav\";\r\nimport { Gallery } from \"./Gallery/Gallery\";\r\nimport { FloatingArrow } from \"./FloatingArrow/FloatingArrow\";\r\nimport { ZoomCardItem } from \"./ZoomCardItem/ZoomCardItem\";\r\n\r\nimport \"./art-gallery.css\";\r\nimport { baseURL } from \"../baseURL\";\r\n\r\nexport const ArtGallery = (props) => {\r\n  const [lock, setLock] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [card, setCard] = useState([]);\r\n  const [wide, setWide] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.windowWidth < 501) {\r\n      console.log(\"narrow\");\r\n      setWide(false);\r\n    } else {\r\n      setWide(true);\r\n    }\r\n  }, [props.windowWidth]);\r\n\r\n  const recieveNavSearchText = useCallback((props) => {\r\n    // Update searched text in the state\r\n    setSearch(props);\r\n  }, []);\r\n\r\n  const recieveTagSearchText = useCallback((props) => {\r\n    // Update searched text in the state\r\n    setLock(false);\r\n    setSearch(props.toLowerCase());\r\n  }, []);\r\n\r\n  const recieveCardDetails = useCallback((propsChild) => {\r\n    let cardId = propsChild.id;\r\n    console.log(\"from recieveCardDetails\", cardId);\r\n\r\n    recieveCardFromServer(cardId); // Gọi API thay vì Firebase\r\n  }, []);\r\n\r\n  // // Hàm thay thế để lấy dữ liệu từ server\r\n  // async function recieveCardFromServer(cardId) {\r\n\r\n  //   console.log(cardId)\r\n  //   try {\r\n  //     // Gọi API để lấy dữ liệu card từ server\r\n  //     const response = await axios.get(`http://localhost:5000/cards/${cardId}`);\r\n  //     const cardData = response.data;\r\n\r\n  //     // Lưu thông tin card vào state\r\n  //     setCard(cardData);\r\n  //     setLock(true); // Mở khoá và hiển thị zoom card\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching card details:\", error);\r\n  //   }\r\n  // }\r\n\r\n  async function recieveCardFromServer(cardId) {\r\n    console.log(cardId);\r\n    try {\r\n      // Gọi API Cloudinary để lấy thông tin ảnh từ Cloudinary\r\n      const response = await axios.get(`${baseURL}/images/${cardId}`, {\r\n        headers: {\r\n          'Authorization': `Basic ${btoa('0Ag49RB9uUxpHCw-KHR-yxHK6yI')}`, // Thêm API key và secret nếu cần\r\n        }\r\n      });\r\n\r\n      // Lấy dữ liệu từ API Cloudinary\r\n      const cardData = {\r\n        id: response.data.id,\r\n        url: response.data.url,\r\n        title: response.data.title || 'No title', // Lấy title từ context\r\n        description: response.data.description || 'No description', // Lấy description từ context\r\n        tags: response.data.context?.custom?.tags || [], // Lấy tags từ context\r\n        created_at: new Date(response.data.created_at).toLocaleString(),\r\n      };\r\n\r\n      // Lưu thông tin card vào state\r\n      setCard(cardData);\r\n\r\n      console.log(card)\r\n      setLock(true); // Mở khoá và hiển thị zoom card\r\n    } catch (error) {\r\n      console.error(\"Error fetching card details from Cloudinary:\", error);\r\n    }\r\n}\r\n\r\n  \r\n\r\n  return (\r\n    <div id=\"ArtGallery\" className=\"wide-art-gallery\">\r\n      <div\r\n        className={\r\n          lock\r\n            ? wide\r\n              ? \"art-gallery-background avoid-clicks\"\r\n              : \"art-gallery-background avoid-clicks no-scroll\"\r\n            : \"\"\r\n        }\r\n      >\r\n        <Nav search={search} handleNavSearch={recieveNavSearchText} />\r\n        <Gallery\r\n          search={search}\r\n          handleGalleryClickedCard={recieveCardDetails}\r\n        />\r\n        {wide && lock && <ScrollLock />}\r\n      </div>\r\n\r\n      {card === undefined || card.length === 0 || !lock ? (\r\n        <FloatingArrow />\r\n      ) : (\r\n        <div className={wide ? \"zoom-card-wide\" : \"zoom-card-narrow\"}>\r\n          <i\r\n            className=\"fas fa-times exit-icon\"\r\n            onClick={() => setLock(false)}\r\n          />\r\n          <ZoomCardItem card={card} handleTagSearch={recieveTagSearchText} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './BackgroundMusic.css'\r\n\r\nconst BackgroundMusic = () => {\r\n  const [audio] = useState(new Audio(require('./music.mp3')));\r\n  const [modalVisible, setModalVisible] = useState(true); // Hiển thị modal\r\n\r\n  const handlePlayMusic = () => {\r\n    // Người dùng nhấn OK\r\n    console.log(audio.play())\r\n    audio.loop = true; // Lặp lại nhạc\r\n    audio.play().catch(error => {\r\n      console.error(\"Error playing audio:\", error); // Kiểm tra lỗi nếu có\r\n    });\r\n    setModalVisible(false); // Ẩn modal sau khi nhấn OK\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Chờ khi modal được nhấn OK\r\n    // Khi người dùng nhấn OK, nhạc sẽ bắt đầu phát\r\n  }, [audio]);\r\n\r\n  return (\r\n    <div>\r\n      {modalVisible && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <p>Click OK to play music!</p>\r\n            <button onClick={handlePlayMusic}>OK</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Các phần tử khác trong ứng dụng */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackgroundMusic;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./app.css\";\r\nimport { ArtGallery } from \"../ArtGallery/ArtGallery\";\r\nimport BackgroundMusic from \"../ArtGallery/BackgroundMusic\";\r\n\r\nexport default function App() {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BackgroundMusic />\r\n      <ArtGallery windowWidth={width} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from \"./App/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}